
# Add this config to your target to enable precompiled headers.
#
# Precompiled headers are done on a per-target basis. If you have just a couple
# of files, the time it takes to precompile (~2 seconds) can actually be longer
# than the time saved. On a Z620, a 100 file target compiles about 2 seconds
# faster with precompiled headers, with greater savings for larger targets.
#
# Recommend precompiled headers for targets with more than 50 .cc files.
config("precompiled_headers") {
  if (is_win) {
    # This is a string rather than a file GN knows about. It has to match
    # exactly what's in the /FI flag below, and what might appear in the source
    # code in quotes for an #include directive.
    precompiled_header = "build/feature/precompile/precompile.h"

    # This is a file that GN will compile with the above header. It will be
    # implicitly added to the sources (potentially multiple times, with one
    # variant for each language used in the target).
    precompiled_source = "//gn/feature/precompile/precompile.cc"

    # Force include the header.
    cflags = [ "/FI$precompiled_header" ]

    # Disable warning for "this file was empty after preprocessing". This
    # error is generated only in C mode for ANSI compatibility. It conflicts
    # with precompiled headers since the source file that's "compiled" for
    # making the precompiled header is empty.
    #
    # This error doesn't happen every time. In VS2013, it seems if the .pch
    # file doesn't exist, no error will be generated (probably MS tested this
    # case but forgot the other one?). To reproduce this error, do a build,
    # then delete the precompile.c.obj file, then build again.
    cflags_c = [ "/wd4206" ]
  } else if (is_mac) {
    precompiled_header = "build/feature/precompile/precompile.h"
    precompiled_source = "//gn/feature/precompile/precompile.h"
  }
}
